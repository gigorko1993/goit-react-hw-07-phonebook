{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactItem/ContactItem.module.css","App.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-action.js","redux/contacts/contacts-operation.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","actions","addContact","createAction","payload","name","number","id","getContacts","deleteContact","changeFilter","fetchContactsStart","fetchContactsFinished","fetchContactsError","updateFilterValue","axios","defaults","baseURL","errorMessage","err","toast","error","state","contacts","contactItems","items","getFilter","filter","getFiltredContacts","createSelector","filterValue","lowerCasedFilter","toLowerCase","includes","getLoader","loader","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","onChange","e","currentTarget","value","className","s","form","onSubmit","contact","preventDefault","find","alert","a","post","data","success","label","input","type","pattern","title","required","button","Filter","ContactItem","useEffect","get","color","height","width","loading","map","item","onClick","contactId","toString","delete","deleteContactsOperation","ContactList","App","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","thumb","createReducer","_","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,mBCAlID,EAAOC,QAAU,CAAC,OAAS,4BAA4B,KAAO,0BAA0B,OAAS,8B,mBCAjGD,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,MAAQ,qB,mBCArDD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,wLC+BzCC,EAVC,CACdC,WArBiBC,YAAa,gBAAgB,YAC9C,MAAO,CACLC,QAAS,CACPC,KAHoE,EAAvBA,KAI7CC,OAJoE,EAAjBA,OAKnDC,GALoE,EAATA,QAsB/DC,YAZkBL,YAAa,gBAa/BM,cAZoBN,YAAa,mBAajCO,aAXmBP,YAAa,yBAYhCQ,mBAVyBR,YAAa,oBAWtCS,sBAV4BT,YAAa,qBAWzCU,mBAVyBV,YAAa,kBAWtCW,kBAVwBX,YAAa,oBChBvCY,IAAMC,SAASC,QAAU,wBAEzB,IAAMC,EAAe,SAACC,GAAD,OACnBC,IAAMC,MAAN,6CACWF,EADX,O,QCLWX,EAAc,SAACc,GAAD,OAAWA,EAAMC,SAASC,aAAaC,OAErDC,EAAY,SAACJ,GAAD,OAAWA,EAAMC,SAASI,QAStCC,EAAqBC,YAChC,CAACrB,EAAakB,IACd,SAACH,EAAUO,GACT,IAAMC,EAAmBD,EAAYE,cACrC,OAAOT,EAASI,QAAO,qBAAGtB,KACnB2B,cAAcC,SAASF,SAKrBG,EAAY,SAACZ,GAAD,OAAWA,EAAMC,SAASC,aAAaW,Q,wBC6DjDC,EA7EK,WAClB,MAAwBC,mBAAS,IAAjC,mBAAOhC,EAAP,KAAaiC,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAO/B,EAAP,KAAeiC,EAAf,KAEMhB,EAAWiB,YAAYhC,GAEvBiC,EAAWC,cAEXC,EAAW,SAACC,GAChB,MAAwBA,EAAEC,cAAlBxC,EAAR,EAAQA,KAAMyC,EAAd,EAAcA,MACd,OAAQzC,GACN,IAAK,OACHiC,EAAQQ,GACR,MAEF,IAAK,SACHP,EAAUO,GACV,MAEF,QACE,SAsBN,OACE,uBAAMC,UAAWC,IAAEC,KAAMC,SAnBV,SAACN,GAGhB,IFXkCO,EEelC,GANAP,EAAEQ,iBAEmB7B,EAAS8B,MAC5B,SAACF,GAAD,OAAaA,EAAQ9C,KAAK2B,gBAAkB3B,EAAK2B,iBAOjD,OAHAM,EAAQ,IACRC,EAAU,SACVe,MAAM,GAAD,OAAIjD,EAAJ,2BAGPoC,GFrBkCU,EEqBH,CAAE9C,OAAMC,UFrBN,uCAAa,WAAOmC,GAAP,iBAAAc,EAAA,6DAChDd,EAASxC,EAAQU,sBAD+B,kBAGvBI,IAAMyC,KAAK,YAAaL,GAHD,gBAGtCM,EAHsC,EAGtCA,KACRrC,IAAMsC,QAAQ,gCACdjB,EAASxC,EAAQC,WAAWuD,IALkB,kDAO9CvC,EAAa,EAAD,IACZuB,EAASxC,EAAQY,mBAAR,OARqC,yBAU9C4B,EAASxC,EAAQW,yBAV6B,6EAAb,wDEsBjC0B,EAAQ,IACRC,EAAU,KAIV,UACE,wBAAOQ,UAAWC,IAAEW,MAApB,iBAEE,uBACEZ,UAAWC,IAAEY,MACbjB,SAAUA,EACVkB,KAAK,OACLf,MAAOzC,EACPA,KAAK,OACLyD,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,wBAAOjB,UAAWC,IAAEW,MAApB,mBAEE,uBACEZ,UAAWC,IAAEY,MACbjB,SAAUA,EACVkB,KAAK,MACLxD,KAAK,SACLyD,QAAQ,yFACRC,MAAM,giBACNjB,MAAOxC,EACP0D,UAAQ,OAGZ,wBAAQjB,UAAWC,IAAEiB,OAAQJ,KAAK,SAAlC,6B,iBC/CSK,EAxBA,WACb,IAAMvC,EAASa,YAAYd,GACrBe,EAAWC,cAMjB,OACE,mCACE,wBAAOK,UAAWC,IAAEW,MAApB,kCAEE,uBACEZ,UAAWC,IAAEY,MACbvD,KAAK,SACLwD,KAAK,OACLf,MAAOnB,EACPgB,SAbS,SAACC,GAChBH,EAASxC,EAAQS,aAAakC,EAAEC,cAAcC,iB,0CC6CnCqB,EAxCK,WAClB,IAAM5C,EAAWiB,YAAYZ,GACvBa,EAAWC,cAEjB0B,qBAAU,WACR3B,EJXgC,uCAAM,WAAOA,GAAP,iBAAAc,EAAA,6DACxCd,EAASxC,EAAQU,sBADuB,kBAGfI,IAAMsD,IAAI,aAHK,gBAG9BZ,EAH8B,EAG9BA,KACRhB,EAASxC,EAAQO,YAAYiD,IAJS,gDAMtCvC,EAAa,EAAD,IACZuB,EAASxC,EAAQY,mBAAR,OAP6B,yBAStC4B,EAASxC,EAAQW,yBATqB,4EAAN,yDIY/B,CAAC6B,IAEJ,IAAMN,EACJ,cAAC,IAAD,CACE0B,KAAK,UACLS,MAAM,yBACNC,OAAQ,GACRC,MAAO,KAGLC,EAAUjC,YAAYN,GAE5B,OACE,6BACGuC,EACC,oBAAI1B,UAAWC,IAAEb,OAAjB,SAA0BA,IAE1BZ,EAASmD,KAAI,gBAAGnE,EAAH,EAAGA,GAAIF,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACX,qBAAIyC,UAAWC,IAAE2B,KAAjB,UACGtE,EADH,KACWC,EACT,wBACEyC,UAAWC,IAAEiB,OACbW,QAAS,kBAAMnC,EJPU,SAAClC,GAAD,8CAAQ,WAAOkC,GAAP,eAAAc,EAAA,6DACvCsB,EAAYtE,EAAGuE,WACrBrC,EAASxC,EAAQU,sBAF4B,kBAIrCI,IAAMgE,OAAN,oBAA0BF,IAJW,OAK3CpC,EAASxC,EAAQQ,cAAcF,IALY,gDAO3CW,EAAa,EAAD,IACZuB,EAASxC,EAAQY,mBAAR,OARkC,yBAU3C4B,EAASxC,EAAQW,yBAV0B,4EAAR,sDIODoE,CAAwBzE,KAChDsD,KAAK,SAHP,sBAF0BtD,SC9BvB0E,EARK,WAClB,OACE,mCACE,cAAC,EAAD,O,iBCES,SAASC,IACtB,OACE,qCACE,cAAC,IAAD,CACEC,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,IAEd,sBAAK5C,UAAWC,IAAE4C,MAAlB,UACE,oBAAI7C,UAAWC,IAAEe,MAAjB,uBACA,cAAC,EAAD,IACA,oBAAIhB,UAAWC,IAAEe,MAAjB,sBACA,cAAC,EAAD,IACA,cAAC,EAAD,U,mCCjBFvC,EAAeqE,YALA,CACnBpE,MAAO,GACPU,QAAQ,EACRd,MAAO,KAEyB,mBAC/BpB,EAAQO,aAAc,SAACc,EAAD,OAAUlB,EAAV,EAAUA,QAAV,mBAAC,eACnBkB,GADkB,IAErBG,MAAM,YAAKrB,QAHmB,cAK/BH,EAAQC,YAAa,SAACoB,EAAD,OAAUlB,EAAV,EAAUA,QAAV,mBAAC,eAClBkB,GADiB,IAEpBG,MAAM,GAAD,mBAAMH,EAAMG,OAAZ,CAAmBrB,SAPM,cAS/BH,EAAQQ,eAAgB,SAACa,EAAD,OAAUlB,EAAV,EAAUA,QAAV,mBAAC,eACrBkB,GADoB,IAEvBG,MAAOH,EAAMG,MAAME,QAAO,qBAAGpB,KAAgBH,UAXf,cAc/BH,EAAQU,oBAAqB,SAACW,GAAD,mBAAC,eAC1BA,GADyB,IAE5Ba,QAAQ,OAhBsB,cAkB/BlC,EAAQW,uBAAwB,SAACU,GAAD,mBAAC,eAC7BA,GAD4B,IAE/Ba,QAAQ,OApBsB,cAsB/BlC,EAAQY,oBAAqB,SAACS,EAAD,OAAUlB,EAAV,EAAUA,QAAV,mBAAC,eAC1BkB,GADyB,IAE5BD,MAAOjB,OAxBuB,IA4B5BuB,EAASkE,YAAc,GAAD,eACzB5F,EAAQS,cAAe,SAACoF,EAAD,YAAM1F,YAGjB2F,cAAgB,CAC7BvE,eACAG,WCjCaqE,EAPDC,YAAe,CAC3BC,QAAS,CACP3E,SAAU4E,GAEZC,UAAUC,ICAZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAACd,EAAD,QAGJuB,SAASC,eAAe,W","file":"static/js/main.1da82f76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactItem_button__2ySxX\",\"item\":\"ContactItem_item__burAM\",\"loader\":\"ContactItem_loader__2GRz6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__-GfWs\",\"thumb\":\"App_thumb__3zGUf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nconst addContact = createAction(\"contacts/Add\", ({ name, number, id }) => {\n  return {\n    payload: {\n      name,\n      number,\n      id,\n    },\n  };\n});\n\nconst getContacts = createAction(\"contacts/Get\");\nconst deleteContact = createAction(\"contacts/Delete\");\n\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nconst fetchContactsStart = createAction(\"contacts/loading\");\nconst fetchContactsFinished = createAction(\"contacts/finished\");\nconst fetchContactsError = createAction(\"contacts/error\");\nconst updateFilterValue = createAction(\"contacts/filter\");\n\nconst actions = {\n  addContact,\n  getContacts,\n  deleteContact,\n  changeFilter,\n  fetchContactsStart,\n  fetchContactsFinished,\n  fetchContactsError,\n  updateFilterValue,\n};\nexport default actions;\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport actions from \"./contacts-action\";\n\naxios.defaults.baseURL = \"http://localhost:7777\";\n\nconst errorMessage = (err) =>\n  toast.error(`There are some isues. \n  Message: ${err}.`);\n\nexport const getContactsOperation = () => async (dispatch) => {\n  dispatch(actions.fetchContactsStart());\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(actions.getContacts(data));\n  } catch (error) {\n    errorMessage(error);\n    dispatch(actions.fetchContactsError(error));\n  } finally {\n    dispatch(actions.fetchContactsFinished());\n  }\n};\n\nexport const postContactsOperation = (contact) => async (dispatch) => {\n  dispatch(actions.fetchContactsStart());\n  try {\n    const { data } = await axios.post(\"/contacts\", contact);\n    toast.success(\"Add new contact 🚀\");\n    dispatch(actions.addContact(data));\n  } catch (error) {\n    errorMessage(error);\n    dispatch(actions.fetchContactsError(error));\n  } finally {\n    dispatch(actions.fetchContactsFinished());\n  }\n};\n\nexport const deleteContactsOperation = (id) => async (dispatch) => {\n  const contactId = id.toString();\n  dispatch(actions.fetchContactsStart());\n  try {\n    await axios.delete(`/contacts/${contactId}`);\n    dispatch(actions.deleteContact(id));\n  } catch (error) {\n    errorMessage(error);\n    dispatch(actions.fetchContactsError(error));\n  } finally {\n    dispatch(actions.fetchContactsFinished());\n  }\n};\n","import { createSelector } from \"reselect\";\n\nexport const getContacts = (state) => state.contacts.contactItems.items;\n\nexport const getFilter = (state) => state.contacts.filter;\n\n// export const getFiltredContacts = (state) => {\n//   const lowerCasedFilter = getFilter(state).toLowerCase();\n//   const filteredContacts = getContacts(state).filter(({ name }) =>\n//     name.toLowerCase().includes(lowerCasedFilter)\n//   );\n//   return filteredContacts;\n// };\nexport const getFiltredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filterValue) => {\n    const lowerCasedFilter = filterValue.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(lowerCasedFilter)\n    );\n  }\n);\n\nexport const getLoader = (state) => state.contacts.contactItems.loader;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { postContactsOperation } from \"../../redux/contacts/contacts-operation\";\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\nimport s from \"./ContactForm.module.css\";\n\nconst ContactForm = () => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  const onChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const contactCheck = contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (contactCheck) {\n      setName(\"\");\n      setNumber(\"\");\n      alert(`${name} is already in contact`);\n      return;\n    }\n    dispatch(postContactsOperation({ name, number }));\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={s.form} onSubmit={onSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          onChange={onChange}\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          onChange={onChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          value={number}\n          required\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from \"react-redux\";\n\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\nimport actions from \"../../redux/contacts/contacts-action\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = (e) => {\n    dispatch(actions.changeFilter(e.currentTarget.value));\n  };\n\n  return (\n    <>\n      <label className={s.label}>\n        Find contacts by name\n        <input\n          className={s.input}\n          name=\"filter\"\n          type=\"text\"\n          value={filter}\n          onChange={onChange}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getLoader,\n  getFiltredContacts,\n} from \"../../../redux/contacts/contacts-selectors\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport {\n  deleteContactsOperation,\n  getContactsOperation,\n} from \"../../../redux/contacts/contacts-operation\";\n\nimport s from \"./ContactItem.module.css\";\n\nconst ContactItem = () => {\n  const contacts = useSelector(getFiltredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsOperation());\n  }, [dispatch]);\n\n  const loader = (\n    <Loader\n      type=\"Circles\"\n      color=\"rgba(70, 70, 241, 0.5)\"\n      height={66}\n      width={66}\n    />\n  );\n  const loading = useSelector(getLoader);\n\n  return (\n    <ul>\n      {loading ? (\n        <li className={s.loader}>{loader}</li>\n      ) : (\n        contacts.map(({ id, name, number }) => (\n          <li className={s.item} key={id}>\n            {name}: {number}\n            <button\n              className={s.button}\n              onClick={() => dispatch(deleteContactsOperation(id))}\n              type=\"button\"\n            >\n              Delete\n            </button>\n          </li>\n        ))\n      )}\n    </ul>\n  );\n};\n\nexport default ContactItem;\n","import ContactItem from \"./ContactItem\";\n\nconst ContactList = () => {\n  return (\n    <>\n      <ContactItem />\n    </>\n  );\n};\n\nexport default ContactList;\n","import { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport s from \"./App.module.css\";\n\nexport default function App() {\n  return (\n    <>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <div className={s.thumb}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={s.title}>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </>\n  );\n}\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./contacts-action\";\n\nconst InitialState = {\n  items: [],\n  loader: false,\n  error: \"\",\n};\nconst contactItems = createReducer(InitialState, {\n  [actions.getContacts]: (state, { payload }) => ({\n    ...state,\n    items: [...payload],\n  }),\n  [actions.addContact]: (state, { payload }) => ({\n    ...state,\n    items: [...state.items, payload],\n  }),\n  [actions.deleteContact]: (state, { payload }) => ({\n    ...state,\n    items: state.items.filter(({ id }) => id !== payload),\n  }),\n\n  [actions.fetchContactsStart]: (state) => ({\n    ...state,\n    loader: true,\n  }),\n  [actions.fetchContactsFinished]: (state) => ({\n    ...state,\n    loader: false,\n  }),\n  [actions.fetchContactsError]: (state, { payload }) => ({\n    ...state,\n    error: payload,\n  }),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contactItems,\n  filter,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts/contacts-reducer\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n// import {\n//   combineReducers,\n//   configureStore,\n//   getDefaultMiddleware,\n// } from \"@reduxjs/toolkit\";\n// import logger from \"redux-logger\";\n// import {\n//   persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n// import contactsReducer from \"./contacts/contacts-reducer\";\n\n// const contactsPersistConfig = {\n//   key: \"ContactsList\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n\n// const rootReducer = combineReducers({\n//   contacts: persistReducer(contactsPersistConfig, contactsReducer),\n// });\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n//   logger,\n// ];\n\n// const store = configureStore({\n//   reducer: rootReducer,\n//   middleware,\n//   devTools: process.env.NODE_ENV === \"development\",\n// });\n// const persistor = persistStore(store);\n// const storeExp = { store, persistor };\n\n// export default storeExp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}